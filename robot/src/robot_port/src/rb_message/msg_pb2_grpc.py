# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import msg_pb2 as msg__pb2


class MsgServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfigMap = channel.unary_unary(
                '/msg.MsgServices/ConfigMap',
                request_serializer=msg__pb2.Map.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.RobotPosition = channel.unary_unary(
                '/msg.MsgServices/RobotPosition',
                request_serializer=msg__pb2.RBPosition.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.RobotPath = channel.unary_unary(
                '/msg.MsgServices/RobotPath',
                request_serializer=msg__pb2.RBPath.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.SendVoiceFile = channel.stream_unary(
                '/msg.MsgServices/SendVoiceFile',
                request_serializer=msg__pb2.VoiceData.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.VoiceResult = channel.unary_unary(
                '/msg.MsgServices/VoiceResult',
                request_serializer=msg__pb2.VoiceStr.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.Log = channel.unary_unary(
                '/msg.MsgServices/Log',
                request_serializer=msg__pb2.LogStr.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.ControlCommand = channel.unary_unary(
                '/msg.MsgServices/ControlCommand',
                request_serializer=msg__pb2.ControlCmd.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.RobotFinished = channel.unary_unary(
                '/msg.MsgServices/RobotFinished',
                request_serializer=msg__pb2.Response.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )
        self.DriveRobot = channel.unary_unary(
                '/msg.MsgServices/DriveRobot',
                request_serializer=msg__pb2.Drive.SerializeToString,
                response_deserializer=msg__pb2.Response.FromString,
                )


class MsgServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConfigMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RobotPosition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RobotPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendVoiceFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoiceResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Log(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControlCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RobotFinished(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DriveRobot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfigMap': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigMap,
                    request_deserializer=msg__pb2.Map.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'RobotPosition': grpc.unary_unary_rpc_method_handler(
                    servicer.RobotPosition,
                    request_deserializer=msg__pb2.RBPosition.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'RobotPath': grpc.unary_unary_rpc_method_handler(
                    servicer.RobotPath,
                    request_deserializer=msg__pb2.RBPath.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'SendVoiceFile': grpc.stream_unary_rpc_method_handler(
                    servicer.SendVoiceFile,
                    request_deserializer=msg__pb2.VoiceData.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'VoiceResult': grpc.unary_unary_rpc_method_handler(
                    servicer.VoiceResult,
                    request_deserializer=msg__pb2.VoiceStr.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'Log': grpc.unary_unary_rpc_method_handler(
                    servicer.Log,
                    request_deserializer=msg__pb2.LogStr.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'ControlCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ControlCommand,
                    request_deserializer=msg__pb2.ControlCmd.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'RobotFinished': grpc.unary_unary_rpc_method_handler(
                    servicer.RobotFinished,
                    request_deserializer=msg__pb2.Response.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
            'DriveRobot': grpc.unary_unary_rpc_method_handler(
                    servicer.DriveRobot,
                    request_deserializer=msg__pb2.Drive.FromString,
                    response_serializer=msg__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'msg.MsgServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MsgServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConfigMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/ConfigMap',
            msg__pb2.Map.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RobotPosition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/RobotPosition',
            msg__pb2.RBPosition.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RobotPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/RobotPath',
            msg__pb2.RBPath.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendVoiceFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/msg.MsgServices/SendVoiceFile',
            msg__pb2.VoiceData.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoiceResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/VoiceResult',
            msg__pb2.VoiceStr.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Log(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/Log',
            msg__pb2.LogStr.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ControlCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/ControlCommand',
            msg__pb2.ControlCmd.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RobotFinished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/RobotFinished',
            msg__pb2.Response.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DriveRobot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/msg.MsgServices/DriveRobot',
            msg__pb2.Drive.SerializeToString,
            msg__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
